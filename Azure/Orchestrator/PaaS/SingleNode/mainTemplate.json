{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "minLength": 4,
      "maxLength": 20,
      "metadata": {
        "description": "Name of azure web app"
      }
    },
    "orchestratorVersion": {
      "type": "string",
      "defaultValue": "18.4.3",
      "allowedValues": [
        "18.4.3",
        "18.4.2",
        "18.4.1"
      ],
      "metadata": {
        "description": "Version of the Orchestrator"
      }
    },
    "howManyRobots": {
      "type": "string",
      "defaultValue": "<100",
      "allowedValues": [
        "<100",
        "100<500",
        ">500"
      ],
      "metadata": {
        "description": "How many robots will be connected to Orchestrator"
      }
    },
    "SQLServerName": {
      "type": "string",
      "minLength": 4,
      "maxLength": 20,
      "metadata": {
        "description": "SQL Azure DB Server name"
      }
    },
    "SQLServerAdminLogin": {
      "type": "string",
      "minLength": 4,
      "maxLength": 15,
      "metadata": {
        "description": "SQL Azure DB administrator  user login"
      }
    },
    "SQLServerAdminPassword": {
      "type": "securestring",
      "minLength": 5,
      "maxLength": 15,
      "metadata": {
        "description": "Database admin user password"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "appName": "[trim(toLower(parameters('appName')))]",
    "SQLServerName": "[trim(toLower(parameters('SQLServerName')))]",
    "orchestratorLink": "[concat('https://download.uipath.com/versions/',parameters('orchestratorVersion'),'/','UiPath.Web.zip')]",
    "appServiceTier": "Standard",
    "dbName": "[ toLower(concat(parameters('appName'), '-db')) ]",
    "dbEdition": "[if(contains(parameters('howManyRobots'), '<100'), 'Standard', if(contains(parameters('howManyRobots'), '100<500'), 'Standard', 'Premium'))]",
    "dbPerformanceLevel": "[if(contains(parameters('howManyRobots'), '<100'), 'S1', if(contains(parameters('howManyRobots'), '100<500'), 'S2', 'P2'))]",
    "storageAccountType": "Standard_LRS",
    "encriptionKey": "dfno3B1C0udcXiY4tpsFs8Fd9O2ataeYsILcLTPF844=",
    "machineKey": "A0E11117EA05E92EB368457B4FD34DCDE88011D2EF19E74766782DEC1EC467BA",
    "validationMachineKey": "AD49937D84E0A5EABCBA33F17EC7D1E492B3AA1244302CCEED7039DA33EBF714EB60C7908FDE96037843C8A49EC10D8D965D1A861ABBB39C57683451AE715BCD",
    "appServiceWorkerSize": "1",
    "appInsightsRegion": "[resourceGroup().location]",
    "storageAccountName": "[replace(concat(variables('appName'),'sc'),'-','')]",
    "appServicePlanName": "[concat(variables('appName'), '-serviceplan')]",
    "collation": "SQL_Latin1_General_CP1_CI_AS",
    "databaseMaxSizeBytes": "1073741824"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "pid-5b5efb37-e388-4862-add1-0be0d6d0d45b",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "name": "[variables('SQLServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('SQLServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('SQLServerAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "apiVersion": "2014-04-01-preview",
          "name": "[variables('dbName')]",
          "type": "databases",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('SQLServerName')]"
          ],
          "properties": {
            "edition": "[variables('dbEdition')]",
            "collation": "[variables('collation')]",
            "requestedServiceObjectiveName": "[variables('dbPerformanceLevel')]"
          }
        },
        {
          "apiVersion": "2014-04-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
          ],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2014-06-01",
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverFarms",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "appServiceTier": "[variables('appServiceTier')]",
        "workerSize": "[variables('appServiceWorkerSize')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2015-02-01",
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/Sites",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "empty"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "properties": {
        "name": "[variables('appName')]",
        "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/',resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
        "hostingEnvironment": "",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "Default",
              "ConnectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('SQLServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('dbName'), ';User Id=', parameters('SQLServerAdminLogin'), '@', variables('SQLServerName'), ';Password=', parameters('SQLServerAdminPassword'), ';')]",
              "type": "SQLAzure"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2014-06-01",
          "name": "MSDeploy",
          "type": "Extensions",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('appName'))]",
            "[concat('Microsoft.Web/Sites/', variables('appName'), '/config/web')]",
            "[concat('Microsoft.Sql/servers/', variables('SQLServerName'), '/databases/', variables('dbName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
          ],
          "properties": {
            "packageUri": "[variables('orchestratorLink')]",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('SQLServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('dbName'), ';User Id=', parameters('SQLServerAdminLogin'), '@', variables('SQLServerName'), ';Password=', parameters('SQLServerAdminPassword'), ';')]",
            "setParameters": {
              "IIS Web Application Name": "variables('appName')",
              "databaseEnableAutomaticMigrations": "true",
              "machineKeyDecryption": "AES",
              "machineKeyDecryptionKey": "[variables('machineKey')]",
              "machineKeyValidation": "HMACSHA256",
              "machineKeyValidationKey": "[variables('validationMachineKey')]",
              "EncryptionKey": "[variables('encriptionKey')]"
            }
          }
        },
        {
          "apiVersion": "2015-04-01",
          "name": "connectionstrings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('appName'))]",
            "[concat('Microsoft.Sql/servers/', variables('SQLServerName'), '/databases/', variables('dbName'))]",
            "[concat('Microsoft.Web/Sites/', variables('appName'), '/Extensions/MSDeploy')]"
          ],
          "properties": {
            "Default": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('SQLServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('dbName'), ';User Id=', parameters('SQLServerAdminLogin'), '@', variables('SQLServerName'), ';Password=', parameters('SQLServerAdminPassword'), ';')]",
              "type": "SQLAzure"
            }
          }
        },
        {
          "apiVersion": "2014-06-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('appName'))]"
          ],
          "properties": {
            "phpVersion": "off",
            "netFrameworkVersion": "v4.5",
            "use32BitWorkerProcess": "true",
            "webSocketsEnabled": true,
            "alwaysOn": "true",
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 40
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('appServicePlanName'), '-scaleset')]",
      "type": "microsoft.insights/autoscalesettings",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": "1",
              "maximum": "2",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": true,
        "name": "[concat(variables('appServicePlanName'), '-scaleset')]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('ServerErrors ', variables('appName'))]",
      "type": "microsoft.insights/alertrules",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('appName'))]"
      ],
      "properties": {
        "name": "[concat('ServerErrors ', variables('appName'))]",
        "description": "[concat(variables('appName'), ' has some server errors, status code 5xx.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]",
            "metricName": "Http5xx"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('ForbiddenRequests ', variables('appName'))]",
      "type": "microsoft.insights/alertrules",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('appName'))]"
      ],
      "properties": {
        "name": "[concat('ForbiddenRequests ', variables('appName'))]",
        "description": "[concat(variables('appName'), ' has some requests that are forbidden, status code 403.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]",
            "metricName": "Http403"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
      "type": "microsoft.insights/alertrules",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      ],
      "properties": {
        "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
        "description": "[concat('The average CPU is high across all the instances of ', variables('appServicePlanName'))]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
            "metricName": "CpuPercentage"
          },
          "operator": "GreaterThan",
          "threshold": 90,
          "windowSize": "PT15M"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('LongHttpQueue ', variables('appServicePlanName'))]",
      "type": "microsoft.insights/alertrules",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      ],
      "properties": {
        "name": "[concat('LongHttpQueue ', variables('appServicePlanName'))]",
        "description": "[concat('The HTTP queue for the instances of ', variables('appServicePlanName'), ' has a large number of pending requests.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
            "metricName": "HttpQueueLength"
          },
          "operator": "GreaterThan",
          "threshold": 100,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('appName'),'-appin')]",
      "type": "microsoft.insights/components",
      "location": "[variables('appInsightsRegion')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]": "Resource"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('appName'))]"
      ],
      "properties": {
        "applicationId": "[variables('appName')]"
      }
    }
  ]
}
